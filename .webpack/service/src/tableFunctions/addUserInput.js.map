{"version":3,"sources":["webpack://serverless_template/external \"aws-sdk\"","webpack://serverless_template/external \"source-map-support/register\"","webpack://serverless_template/webpack/bootstrap","webpack://serverless_template/webpack/runtime/compat get default export","webpack://serverless_template/webpack/runtime/define property getters","webpack://serverless_template/webpack/runtime/hasOwnProperty shorthand","webpack://serverless_template/webpack/runtime/make namespace object","webpack://serverless_template/./src/tableFunctions/addUserInput.js"],"names":["config","region","accessKeyId","secretAccessKey","endpoint","addInputToDB","docClient","Promise","resolve","params","TableName","Item","year","title","info","put","err","handler","DynamoDB","statusCode","body","JSON","stringify","message","input","Error"],"mappings":";;;;;;;;;;AAAA,oC;;;;;;;;;;ACAA,wD;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;;ACNA;AAEAA,kDAAA,CAAc;AACZC,QAAM,EAAE,WADI;AAEZC,aAAW,EAAE,MAFD;AAGZC,iBAAe,EAAE,MAHL;AAIZC,UAAQ,EAAE;AAJE,CAAd;;AAOA,eAAeC,YAAf,CAA4BC,SAA5B,EAAuC;AACrC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,UAAMC,MAAM,GAAG;AACbC,eAAS,EAAE,QADE;AAEbC,UAAI,EAAE;AACJC,YAAI,EAAE,EADF;AACM;AACVC,aAAK,EAAE,EAFH;AAEO;AACXC,YAAI,EAAE,EAHF,CAGM;;AAHN;AAFO,KAAf,CAD8B,CAU9B;;AACAR,aAAS,CAACS,GAAV,CAAcN,MAAd,EAAuBO,GAAD,IAAS;AAC7B,UAAIA,GAAJ,EAAS;AACP,cAAMA,GAAN;AACD;AACF,KAJD;AAKAR,WAAO,CAACC,MAAD,CAAP;AACD,GAjBM,CAAP;AAkBD,C,CAED;;;AACO,MAAMQ,OAAO,GAAG,YAAY;AACjC,MAAI;AACF,UAAMX,SAAS,GAAG,IAAIY,4DAAJ,EAAlB;AAEA,WAAO;AACLC,gBAAU,EAAE,GADP;AAELC,UAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,eAAO,EAAE,iDADU;AAEnBC,aAAK,EAAE,MAAMnB,YAAY,CAACC,SAAD;AAFN,OAAf,EAIN,IAJM,EAKN,CALM;AAFD,KAAP;AASD,GAZD,CAYE,OAAOU,GAAP,EAAY;AACZ,UAAM,IAAIS,KAAJ,CAAW,4BAA2BT,GAAI,EAA1C,CAAN;AACD;AACF,CAhBM,C","file":"src/tableFunctions/addUserInput.js","sourcesContent":["module.exports = require(\"aws-sdk\");","module.exports = require(\"source-map-support/register\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { config, DynamoDB } from 'aws-sdk';\r\n\r\nconfig.update({\r\n  region: 'us-east-1',\r\n  accessKeyId: '1234',\r\n  secretAccessKey: '5678',\r\n  endpoint: 'http://localhost:8000',\r\n});\r\n\r\nasync function addInputToDB(docClient) {\r\n  return new Promise((resolve) => {\r\n    const params = {\r\n      TableName: 'Movies',\r\n      Item: {\r\n        year: '', // Movie year of production\r\n        title: '', // Movie name\r\n        info: '', // An object of any information\r\n      },\r\n    };\r\n\r\n    // Add movie parameters to the table including the year, title, and info\r\n    docClient.put(params, (err) => {\r\n      if (err) {\r\n        throw err;\r\n      }\r\n    });\r\n    resolve(params);\r\n  });\r\n}\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const handler = async () => {\r\n  try {\r\n    const docClient = new DynamoDB.DocumentClient();\r\n\r\n    return {\r\n      statusCode: 200,\r\n      body: JSON.stringify({\r\n        message: 'New movie based on your inputs has been added:-',\r\n        input: await addInputToDB(docClient),\r\n      },\r\n      null,\r\n      2),\r\n    };\r\n  } catch (err) {\r\n    throw new Error(`Well, errors can happen. ${err}`);\r\n  }\r\n};\r\n"],"sourceRoot":""}